{"version":3,"sources":["../js/app.js"],"names":["express","require","bodyParser","crypto","uuidv4","app","use","urlencoded","extended","User","name","pass","email","id","Worker","exp","users","workers","arrayToString","arr","ind","str","get","req","res","writeHead","i","length","write","end","post","console","log","body","push","UserName","createHash","update","UserPassword","digest","UserEmail","WorkerName","WorkerPassword","WorkerEmail","WorkerExp","sendFile","__dirname","listen"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst bodyParser = require('body-parser');\r\nconst crypto = require('crypto')\r\nconst uuidv4 = require('uuid/v4');\r\n\"use strict\";\r\nlet app = express();\r\n\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\n//app.use(bodyParser.urlencoded({ extended: false }))\r\nclass User {\r\n    constructor(name, pass, email) {\r\n        this.id = uuidv4();\r\n        this.name = name;\r\n        this.pass = pass;\r\n        this.email = email;\r\n\t\t\r\n    }\r\n}\r\n\r\nclass Worker {\r\n    constructor(name, pass, email, exp) {\r\n        this.id = uuidv4();\r\n        this.name = name;\r\n        this.pass = pass;\r\n        this.email = email;\r\n\t\tthis.exp = exp;\r\n    }\r\n}\r\nconst users = [];\r\nconst workers = [];\r\nfunction arrayToString(arr, ind) {\r\n  let str = '';\r\n  \r\n  \r\n  str += 'Name: ';\r\n  str += arr[ind].name + ' ';\r\n \r\n  \r\n  str += 'Password: ';\r\n  str += arr[ind].pass + ' ';\r\n \r\n  \r\n  str += 'Email: ';\r\n  str += arr[ind].email + ' ';\r\n \r\n  str += \"\\n\";\r\n\r\n  \r\n  return str;\r\n}\r\n\r\n\r\napp.get('/Users', function (req, res) {\r\n\tres.writeHead(200, {'Content-Type': 'text/html'});\r\n\tfor(let i = 0; i < users.length; i++){\r\n\t\r\n\tlet str = arrayToString (users, i);\r\n\t\r\n\t\r\n\tres.write('<p>');\r\n  res.write(str);\r\n  res.write('</p>');\r\n\t}\r\n\t\r\n    res.write('<form action=\"/goHome\" method = \"get\"><button>Home</button></form>');\r\n\t\r\n\tres.end();\r\n});\r\n    \r\n\t\r\n\r\napp.post('/Users/', function (req, res) {\r\n\tres.writeHead(200, {'Content-Type': 'text/html'});\r\n    console.log(req.body);\r\n    users.push(new User(req.body.UserName, crypto.createHash('md5').update(req.body.UserPassword).digest(\"hex\"), req.body.UserEmail));\r\n    res.write('<p>');\r\n    res.write(\"User \" + req.body.UserName + \" Submitted successfully\");\r\n\tres.write('</p>');\r\n\tres.write('<form action=\"/goHome\" method = \"get\"><button>Home</button></form>');\r\n\tres.end();\r\n});\r\n\r\napp.get('/Workers', function (req, res) {\r\n\tres.writeHead(200, {'Content-Type': 'text/html'});\r\n\tfor(let i = 0; i < workers.length; i++){\r\n\t\r\n\tlet str = arrayToString (workers, i);\r\n\t\r\n\tres.write('<p>');\r\n  res.write(str);\r\n  res.write('</p>');\r\n\t}\r\n\tres.write('<form action=\"/goHome\" method = \"get\"><button>Home</button></form>');\r\n\tres.end();\r\n});\r\n    \r\n\t\r\n\r\napp.post('/Workers/', function (req, res) {\r\n\tres.writeHead(200, {'Content-Type': 'text/html'});\r\n    console.log(req.body);\r\n    workers.push(new Worker(req.body.WorkerName, crypto.createHash('md5').update(req.body.WorkerPassword).digest(\"hex\"), req.body.WorkerEmail, req.body.WorkerExp));\r\n    res.write('<p>');\r\n    res.write(\"Worker \" + req.body.WorkerName + \" Submitted successfully\");\r\n\tres.write('</p>');\r\n\tres.write('<form action=\"/goHome\" method = \"get\"><button>Home</button></form>');\r\n\tres.end();\r\n});\r\n\r\napp.get('/', function (req, res) {\r\n    res.sendFile(__dirname + '/index.html');\r\n});\r\n\r\napp.get('/goHome', function (req, res) {\r\n    res.sendFile(__dirname + '/index.html');\r\n});\r\n\r\napp.listen(8080, function () {\r\n    console.log('application is working on port 8080');\r\n});\r\n"],"file":"app-compiled.js"}